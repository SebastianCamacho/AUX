// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.InternalMigratons
{
    [DbContext(typeof(FUEC_DbContext))]
    [Migration("20250402042305_TercerosYHerencia")]
    partial class TercerosYHerencia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ENTITY.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    b.Property<string>("city")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("intersection_Number")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("municipality")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("neighborhood")
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR(100)");

                    b.Property<int?>("property_Number")
                        .HasColumnType("INT");

                    b.Property<int?>("street_Number")
                        .HasColumnType("INT");

                    b.Property<string>("street_Type")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("third_Id")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("zip_Code")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("id");

                    b.HasIndex("third_Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ENTITY.Third_Party", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<DateTime?>("create_At")
                        .HasColumnType("DATETIME");

                    b.Property<string>("create_By")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("email")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("image")
                        .HasColumnType("longtext");

                    b.Property<string>("phone")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<bool?>("state")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("type_Id")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("type_Third_Party")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)");

                    b.Property<DateTime?>("update_At")
                        .HasColumnType("DATETIME");

                    b.Property<string>("update_By")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("id");

                    b.ToTable("Third_Party");

                    b.HasDiscriminator<string>("type_Third_Party").HasValue("Third_Party");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ENTITY.Models.Legal_Entity", b =>
                {
                    b.HasBaseType("ENTITY.Third_Party");

                    b.Property<int?>("check_Digit")
                        .HasColumnType("int");

                    b.Property<string>("legal_Representative")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("name_Company")
                        .HasColumnType("longtext");

                    b.Property<string>("web_Site")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Persona Juridica");
                });

            modelBuilder.Entity("ENTITY.Models.Natural_Person", b =>
                {
                    b.HasBaseType("ENTITY.Third_Party");

                    b.Property<string>("first_Last_Name")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("first_Name")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("second_Last_Name")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("second_Name")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR(30)");

                    b.HasDiscriminator().HasValue("Persona Natural");
                });

            modelBuilder.Entity("ENTITY.Address", b =>
                {
                    b.HasOne("ENTITY.Third_Party", "Third_Party")
                        .WithMany("Address")
                        .HasForeignKey("third_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Third_Party");
                });

            modelBuilder.Entity("ENTITY.Third_Party", b =>
                {
                    b.Navigation("Address");
                });
#pragma warning restore 612, 618
        }
    }
}
